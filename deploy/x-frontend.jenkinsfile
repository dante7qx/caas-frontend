import java.util.*;
import java.text.SimpleDateFormat;
def today()
{
    String str = "";
    SimpleDateFormat sdf = new SimpleDateFormat("yyyyMMddHHmmss");
    Calendar lastDate = Calendar.getInstance();
    lastDate.add(Calendar.MINUTE, 2);
    str = sdf.format(lastDate.getTime());
    return str;
}
def imageTag = today()
// def harbor = "harbor.xiaohehe.com"
// def penv = "spiritprd"
def harbor = ""
def penv = "dante2012"
def imgName = "x-frontend";
// def image = "$harbor/$penv/$imgName:$imageTag"
def image = "$penv/$imgName:$imageTag"
node {
  stage('拉取源码') {
    checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'dante-github', url: 'git@github.com:dante7qx/caas-frontend.git']]])
  }
  stage('NPM打包') {
    sh "npm install"
    sh "npm run build"
    sh "cp -Rf dist deploy/"
  }
  stage('确认部署') {
    timeout(10) {
      input '确认部署吗？'
    }
  }
  stage('构建Image') {
    dir('deploy') {
      sh "docker build -t $image ."
    }
  }
  stage('推送Harbor') {
    withCredentials([usernamePassword(credentialsId: 'docker_hub', passwordVariable: 'usrpwd', usernameVariable: 'usrname')]) {
	    sh "docker login $harbor -u ${usrname} -p ${usrpwd}"
   	 	sh "docker push $image"
	  }
  }
  stage('清理空间') {
    // sh "docker rmi -f $image"
    cleanWs notFailBuild: true
  }
}
